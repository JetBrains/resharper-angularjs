Directives: 58
a a E <ANY> 650971
form form E <ANY> 677256
	name string optional default: <> Name of the form. If specified, the form controller will be published into related scope, under this name.
input input E <ANY> 748926
	name string optional default: <> Property name of the form under which the control is published.
	ng-change string optional default: <> Angular expression to be executed when input changes due to user interaction with the input element.
	ng-maxlength number optional default: <> Sets `maxlength` validation error key if the value is longer than maxlength. Setting the attribute to a negative or non-numeric value, allows view values of any length.
	ng-minlength number optional default: <> Sets `minlength` validation error key if the value is shorter than minlength.
	ng-model string required default: <> Assignable angular expression to data-bind to.
	ng-pattern string optional default: <> Sets `pattern` validation error key if the value does not match the RegExp pattern expression. Expected value is `/regexp/` for inline patterns or `regexp` for patterns defined as scope expressions.
	ng-required boolean optional default: <> Sets `required` attribute if set to true
	ng-trim boolean optional default: <true> If set to false Angular will not automatically trim the input. This parameter is ignored for input[type=password] controls, which will never trim the input.
	required string optional default: <> Sets `required` validation error key if the value is not entered.
ngApp ng-app AE <ANY> 34985
	ng-strict-di boolean optional default: <> if this attribute is present on the app element, the injector will be created in "strict-di" mode. This means that the application will fail to invoke functions which do not use explicit function annotation (and are thus unsuitable for minification), as described in {@link guide/di the Dependency Injection guide} , and useful debugging info will assist in tracking down the root of these bugs.
ngBind ng-bind AC <ANY> 758207
ngBindHtml ng-bind-html AE <ANY> 763213
ngBindTemplate ng-bind-template AE <ANY> 760696
ngBlur ng-blur AE <window, input, select, textarea, a> 812189
ngChange ng-change AE <input> 766065
ngChecked ng-checked A <INPUT> 659606
ngClass ng-class AC <ANY> 772474
ngClassEven ng-class-even AC <ANY> 780015
ngClassOdd ng-class-odd AC <ANY> 778472
ngClick ng-click AE <ANY> 800339
ngCloak ng-cloak AC <ANY> 781583
ngController ng-controller AE <ANY> 784122
ngCopy ng-copy AE <window, input, select, textarea, a> 812989
ngCsp ng-csp AE <html> 793588
ngCut ng-cut AE <window, input, select, textarea, a> 813549
ngDblclick ng-dblclick AE <ANY> 803133
ngDisabled ng-disabled A <INPUT> 657795
ngFocus ng-focus AE <window, input, select, textarea, a> 811546
ngForm ng-form EAC <ANY> 676584
ngHide ng-hide AE <ANY> 931505
ngHref ng-href A <A> 652198
ngIf ng-if A <ANY> 814644
ngInclude ng-include ECA <ANY> 819672
	autoscroll string optional default: <> Whether `ngInclude` should call {@link ng.$anchorScroll
 *                  $anchorScroll} to scroll the viewport after the content is loaded. - If the attribute is not set, disable scrolling. - If the attribute is set without value, enable scrolling. - Otherwise enable scrolling only if the expression evaluates to truthy value.
	onload string optional default: <> Expression to evaluate when a new partial is loaded.
ngInit ng-init AC <ANY> 830376
ngKeydown ng-keydown AE <ANY> 807216
ngKeypress ng-keypress AE <ANY> 808544
ngKeyup ng-keyup AE <ANY> 807753
ngList ng-list AE <input> 832642
ngModel ng-model AE <input> 870802
ngModelOptions ng-model-options AE <ANY> 879322
ngMousedown ng-mousedown AE <ANY> 803720
ngMouseenter ng-mouseenter AE <ANY> 805473
ngMouseleave ng-mouseleave AE <ANY> 806056
ngMousemove ng-mousemove AE <ANY> 806639
ngMouseover ng-mouseover AE <ANY> 804894
ngMouseup ng-mouseup AE <ANY> 804334
ngNonBindable ng-non-bindable AC <ANY> 890266
ngOpen ng-open A <DETAILS> 664048
ngPaste ng-paste AE <window, input, select, textarea, a> 814091
ngPluralize ng-pluralize EA <ANY> 891477
	count string|expression required default: <> The variable to be bound to.
	offset number optional default: <> Offset to deduct from the total number.
	when string required default: <> The mapping between plural category to its corresponding strings.
ngReadonly ng-readonly A <INPUT> 661053
ngRepeat ng-repeat AE <ANY> 902001
ngSelected ng-selected A <OPTION> 662528
ngShow ng-show AE <ANY> 924348
ngSrc ng-src A <IMG> 656395
ngSrcset ng-srcset A <IMG> 657083
ngStyle ng-style AC <ANY> 937759
ngSubmit ng-submit AE <form> 809108
ngSwitch ng-switch EA <ANY> 939724
ngTransclude ng-transclude EAC <ANY> 947458
ngValue ng-value AE <input> 755386
script script E <ANY> 949978
	id string required default: <> Cache name of the template.
	type string required default: <> Must be set to `'text/ng-template'`.
select select E <ANY> 951699
	name string optional default: <> Property name of the form under which the control is published.
	ng-model string required default: <> Assignable angular expression to data-bind to.
	ng-options comprehension_expression optional default: <> in one of the following forms: * for array data sources: * `label` **`for`** `value` **`in`** `array` * `select` **`as`** `label` **`for`** `value` **`in`** `array` * `label` **`group by`** `group` **`for`** `value` **`in`** `array` * `label` **`group by`** `group` **`for`** `value` **`in`** `array` **`track by`** `trackexpr` * `label` **`for`** `value` **`in`** `array` | orderBy:`orderexpr` **`track by`** `trackexpr` (for including a filter with `track by`) * for object data sources: * `label` **`for (`**`key` **`,`** `value`**`) in`** `object` * `select` **`as`** `label` **`for (`**`key` **`,`** `value`**`) in`** `object` * `label` **`group by`** `group` **`for (`**`key`**`,`** `value`**`) in`** `object` * `select` **`as`** `label` **`group by`** `group` **`for` `(`**`key`**`,`** `value`**`) in`** `object` Where: * `array` / `object`: an expression which evaluates to an array / object to iterate over. * `value`: local variable which will refer to each item in the `array` or each property value of `object` during iteration. * `key`: local variable which will refer to a property name in `object` during iteration. * `label`: The result of this expression will be the label for `<option>` element. The `expression` will most likely refer to the `value` variable (e.g. `value.propertyName`). * `select`: The result of this expression will be bound to the model of the parent `<select>` element. If not specified, `select` expression will default to `value`. * `group`: The result of this expression will be used to group options using the `<optgroup>` DOM element. * `trackexpr`: Used when working with an array of objects. The result of this expression will be used to identify the objects in the array. The `trackexpr` will most likely refer to the `value` variable (e.g. `value.propertyName`). With this the selection is preserved even when the options are recreated (e.g. reloaded from the server).
	ng-required string optional default: <> Adds `required` attribute and `required` validation constraint to the element when the ngRequired expression evaluates to true. Use `ngRequired` instead of `required` when you want to data-bind to the `required` attribute.
	required string optional default: <> The control is considered valid only if value is entered.
textarea textarea E <ANY> 747279
	name string optional default: <> Property name of the form under which the control is published.
	ng-change string optional default: <> Angular expression to be executed when input changes due to user interaction with the input element.
	ng-maxlength number optional default: <> Sets `maxlength` validation error key if the value is longer than maxlength. Setting the attribute to a negative or non-numeric value, allows view values of any length.
	ng-minlength number optional default: <> Sets `minlength` validation error key if the value is shorter than minlength.
	ng-model string required default: <> Assignable angular expression to data-bind to.
	ng-pattern string optional default: <> Sets `pattern` validation error key if the value does not match the RegExp pattern expression. Expected value is `/regexp/` for inline patterns or `regexp` for patterns defined as scope expressions.
	ng-required string optional default: <> Adds `required` attribute and `required` validation constraint to the element when the ngRequired expression evaluates to true. Use `ngRequired` instead of `required` when you want to data-bind to the `required` attribute.
	ng-trim boolean optional default: <true> If set to false Angular will not automatically trim the input.
	required string optional default: <> Sets `required` validation error key if the value is not entered.
